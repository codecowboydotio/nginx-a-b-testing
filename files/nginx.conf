user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {

        keyval_zone zone=split:64k state=/etc/nginx/state_files/split.json;
        keyval      $host $split_level zone=split;


        map $cookie__imp_apg_r_ $dia {
          "~*(.+)(diA%22%3A%22)(?<found>.+)(%22%2C%22)" $found;
          default "unset";
        }
        map $cookie__imp_apg_r_ $dib {
          "~*(.+)(diB%22%3A%22)(?<p>.+)(%22%7D)" $p;
          default "unset";
        }
        ##log_format kv 'sourceip=$remote_addr ' '_imp_apg_r_=$cookie__imp_apg_r_' ' _imp_di_pc_=$cookie__imp_di_pc_' ' $http_user_agent' ' dia=$dia' ' dib=$dib';
        log_format kv 'sourceip=$remote_addr ' ' $http_user_agent' ' dia=$dia' ' dib=$dib';
        #log_format kv 'sourceip=$remote_addr ' '_imp_apg_r_=$cookie__imp_apg_r_' ' _imp_di_pc_=$cookie__imp_di_pc_' ' $http_user_agent' ' dia=$dia' ' dib=$dib';




        split_clients $unique_client_identifier $split0 {
            *   server_a;
        }
        split_clients $unique_client_identifier $split5 {
            5%  server_b;
            *   server_a;
        }
        split_clients $unique_client_identifier $split10 {
            10% server_b;
            *   server_a;
        }
        split_clients $unique_client_identifier $split25 {
            25% server_b;
            *   server_a;
        }
        split_clients $unique_client_identifier $split50 {
            50% server_b;
            *   server_a;
        }
        split_clients $unique_client_identifier $split75 {
            75% server_b;
            *   server_a;
        }
        split_clients $unique_client_identifier $split100 {
            *   server_b;
        }


        map $split_level $upstream {
            0        $split0;
            5        $split5;
            10       $split10;
            25       $split25;
            50       $split50;
            75       $split75;
            100      $split100;
            default  $split0;
        }

        upstream server_a {
            server SERVER_A_IP;
        }
        upstream server_b {
            server SERVER_B_IP;
        }

        server {
            access_log /var/log/nginx/access.log kv;
            listen 80;
            #set $unique_client_identifier $remote_addr; # For testing only
            #set $unique_client_identifier $cookie__imp_di_pc_; # Set the unique client identifier to be the device ID 
            set $unique_client_identifier $dib; # Set the unique client identifier to be the device ID 

            location / {
                  proxy_pass http://$upstream;
            }
            location /api {
                api write=on;
                # in production, directives restricting access
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, PUT, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept';
                if ($request_method = OPTIONS) {
                  add_header 'Access-Control-Allow-Origin' '*';
                  add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, PUT, OPTIONS';
                  add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept';
                  return 200;
                }
            }

            location = /dashboard.html {
                root /usr/share/nginx/html;
            }
            location = /nkvc.html {
                root /tmp/;
            }
        }
}

